using System;
using System.Collections.Generic;
using System.Text;

namespace Scheduleservice.Core.Entities
{
    public class PaymentsourcesEntity
    {
        public int PAYMENT_SOURCE_ID { get; set; }
        public string ORG_NAME { get; set; }
        public string PAYMENT_SOURCE_TYPE { get; set; }
        public string ADDRESS { get; set; }
        public int HHA { get; set; }
        public string HELPLINE { get; set; }
        public string EDI_NETWORK_ADDRESS { get; set; }
        public string EDI_NETWORK_PROTOCOL { get; set; }
        public string EDI_NETWORK_LOGIN_ID { get; set; }
        public string EDI_NETWORK_PASSWORD { get; set; }
        public bool IS_AUTH_MANDATORY { get; set; }
        public string AUTH_ISSUING_AGENCY { get; set; }
        public bool ACTIVE { get; set; }
        public int PAYMENT_SOURCE_FLAG { get; set; }
        public char INSURANCE_FORM_TYPE { get; set; }
        public int DEFAULT_AUTHORIZATION_PERIOD_DAYS { get; set; }
        public int DEFAULT_AUTHORIZATION_PREAPPROVAL_DAYS { get; set; }
        public bool IS_MISSED_VISIT_BILLABLE { get; set; }
        public bool IS_MISSED_VISIT_REQUIRE_CHANGE_ORDER { get; set; }
        public string SENDER_ID_QUAL { get; set; }
        public string RECEIVER_ID_QUAL { get; set; }
        public string RECEIVER_ID { get; set; }
        public string PROGRAM_NAME { get; set; }
        public string PAYER_ID { get; set; }
        public string TAXONOMY_CODE { get; set; }
        public byte IS_FACE_TO_FACE_MANDATORY { get; set; }
        public byte IS_ELIGIBILITY_MANDATORY { get; set; }
        public string DAFAULT_AUTH { get; set; }
        public bool BILL_TO { get; set; }
        public byte OASISEXPORT_REQUIRED { get; set; }
        public bool Auth_CanBillWithoutAuth { get; set; }
        public byte PayerPrimaryType { get; set; }
        public bool SkilledVisitRequired { get; set; }
        public byte AuthType { get; set; }
        public bool Auth_Enable_DailyLimit { get; set; }
        public bool Auth_Enable_WeeklyLimit { get; set; }
        public bool Auth_Enable_MonthlyLimit { get; set; }
        public bool Auth_DailyLimit_HardStop { get; set; }
        public bool Auth_WeeklyLimit_HardStop { get; set; }
        public bool Auth_MonthlyLimit_HardStop { get; set; }
        public byte Auth_RuleOnNonAuth { get; set; }
        public bool Auth_EnableOfficeAuth { get; set; }
        public bool Copay_Enable { get; set; }
        public byte Copay_Type { get; set; }
        public bool Copay_isFixedAmount { get; set; }
        public float Copay_Amount { get; set; }
        public string ContactPerson { get; set; }
        public bool EnableEDI { get; set; }
        public bool InvoicePaidByAgent { get; set; }
        public bool isVisitNotesManualSubmissionAllowed { get; set; }
        public byte InvoiceDueDays { get; set; }
        public bool ENABLECLIENTLEVELAUTHORIZATION { get; set; }
        public bool OASIS_SUMMARY_ONLY { get; set; }
        public bool IsPediatricCare { get; set; }
        public bool SplitOvernightSchedules { get; set; }
        public bool PAYMENT_SOURCE_CODE { get; set; }
        public bool isClientPay { get; set; }
        public bool RequireOASIS { get; set; }
        public string RECEIVER_ID_GS { get; set; }
        public bool IsEpisodicBilling { get; set; }
        public bool IsMedicarePayer { get; set; }
        public bool enableForBatchEligibility { get; set; }
        public int batchEligbilityGateway { get; set; }
        public string TPI { get; set; }
        public string PayerCode { get; set; }
        public DateTime UPDATE_TIMESTAMP_DS { get; set; }
        public bool enableAuthGracePeriodForEachVisit { get; set; }
        public float maxAuthGraceUnits { get; set; }
        public DateTime UPDATED_TIMESTAMP_FOR_OFFLINE { get; set; }
        public bool autoPopulateSecondaryInvoiceGroupCodeAndAdjustCode { get; set; }
        public string defaultGroupCodeForSecondaryInvoice { get; set; }
        public string defaultAdjustmentCodeForSecondaryInvoice { get; set; }
        public bool isAuthHourlyBased { get; set; }
        public string Service_Facility_Name_Type_UB04 { get; set; }
        public string Service_Facility_Name_UB04_OtherName { get; set; }
        public string Service_Facility_Address_Type_UB04 { get; set; }
        public int Service_Facility_Address_UB04_OtherAddress { get; set; }
        public string Service_Facility_Name_Type_CMS1500 { get; set; }
        public string Service_Facility_Name_CMS1500_OtherName { get; set; }
        public string Service_Facility_Address_Type_CMS1500 { get; set; }
        public string Service_Facility_Address_CMS1500_OtherAddress { get; set; }
        public string Service_Facility_Name_Type_EDI { get; set; }
        public string Service_Facility_Name_EDI_OtherName { get; set; }
        public string Service_Facility_Address_Type_EDI { get; set; }
        public int Service_Facility_Address_EDI_OtherAddress { get; set; }
        public string PayTo_Name_Type { get; set; }
        public string PayTo_Name_OtherName { get; set; }
        public string PayTo_Address_Type { get; set; }
        public string PayTo_Address_OtherAddress { get; set; }
        public string BillingProvider_Name_Type { get; set; }
        public string BillingProvider_Name_OtherName { get; set; }
        public string BillingProvider_Address_Type { get; set; }
        public int BillingProvider_Address_OtherAddress { get; set; }
        public bool isPerDiemBilling { get; set; }
        public int KTUPayerSourceID { get; set; }
        public int KTUMappedLivePayerSourceID { get; set; }
        public bool enableCOP { get; set; }
        public bool autoFillbox21Statement { get; set; }
        public string box21StatementDesc { get; set; }
        public string Available_DaysTime { get; set; }
        public bool BillingProvider_Address_CMS_CarryToEDI { get; set; }
        public bool Service_Facility_Address_UB04_CarrytoEDI { get; set; }
        public int ADR_DaystoRespond { get; set; }
        public bool IS_NOSQL_DIRTY { get; set; }
        public bool SplitOvernightScheduleByWeek { get; set; }
        public bool OverNightScheduleApplicabletoPrimaryEVV { get; set; }
        public bool OverNightScheduleApplicabletoOtherEVV { get; set; }
        public bool OverNightScheduleApplicabletoNonEVV { get; set; }
        public bool RequireAuthNPINo { get; set; }
        public bool MandateAuthNPIProvider_Invoice { get; set; }
        public bool overrideHHANPI { get; set; }
        public string PayerNPI { get; set; }
        public string SENDER_ID_GS { get; set; }
        public string SENDER_ID { get; set; }
        public int PaymentSourcesAdditionalID { get; set; }
        public int PayerSourceId { get; set; }
        public bool? PrintUB04WithBorder { get; set; }
        public string PrintCMSWithBorder { get; set; }
        public byte? OrdersRequired_MissedVisit { get; set; }
        public bool? EnableManualEpisodeCreation { get; set; }
        public bool? PrintActualStatementPeriodInInvoice { get; set; }
        public bool? CREATEDEFAULTVISIT_FORNEWCLIENT { get; set; }
        public string OASIS_NON_EDITABLE { get; set; }
        public bool? OASISExportMandatoryForBilling { get; set; }
        public bool? PrintAllSuppliesInInvoice { get; set; }
        public byte? OrdersRequired_Discharge { get; set; }
        public byte? OrdersRequired_VisitPlanChange { get; set; }
        public byte? OrdersRequired_MedicationChange { get; set; }
        public byte? OrdersRequired_ROC { get; set; }
        public bool? AUTH_MANDATORY_FOR_INTAKE_ACCEPT { get; set; }
        public byte? OrdersRequired_PTEval { get; set; }
        public byte? OrdersRequired_OTEval { get; set; }
        public byte? OrdersRequired_MSWEval { get; set; }
        public byte? OrdersRequired_STEval { get; set; }
        public byte? OrdersRequired_ABNNOMNC { get; set; } 
        public bool? RequireFlowsheet { get; set; }
        public bool? AssessmentLockingMandatoryForBilling { get; set; }
        public bool? FirstVisitMandatoryForBilling { get; set; }
        public bool? FirstVisitAfterROCMandForBilling { get; set; }
        public bool? FirstVisitAfterRECERTMandForBilling { get; set; }
        public int? ReferralExpiryDays { get; set; }
        public byte? ROUNDOFF_Direction { get; set; }
        public int? ROUNDOFF_Minutes { get; set; }
        public int EpisodeDuration { get; set; }
        public bool? AuthFormNOTRequiredToRequestAuth { get; set; }
        public string AuthRequest_OrdersRequired { get; set; }
        public bool? SplitInvoiceForMultipleAuthorization { get; set; }
        public bool? BlockInvoiceTillAllDaySchedulesReady { get; set; }
        public byte? OrdersRequired_SOC { get; set; }
        public byte? OrderRequired_Recert { get; set; }
        public bool? EnableEDIAutoTransmission { get; set; }
        public int? EDIGatewayID { get; set; }
        public byte? OrdersRequired_485 { get; set; }
        public bool? UB04PrintFormat_PrintOnlyData { get; set; }
        public int? LOBID { get; set; }
        public bool? ProvideDefaultAuthToFirstVisit { get; set; }
        public string CMS1500Format { get; set; }
        public bool? PayToHeadQuarters { get; set; }
        public int? OrderRequired_ProgressNote { get; set; }
        public bool? isRequireHippsCode { get; set; }
        public bool? SplitScheduleForMultiPayer { get; set; }
        public int? AutoAuthNumberOfSchedules { get; set; }
        public bool? printContractualRateInInvoice { get; set; }
        public bool? OverridePECOSDeficiency { get; set; }
        public string _270_SenderID { get; set; }
        public string _270_ReceiverID { get; set; }
        public string _270_PayerID { get; set; }
        public string _270_ProgramName { get; set; }
        public int? eligibilityGateway { get; set; }
        public string CM2K_ContractReference { get; set; }
        public bool? AutoPostContractualAdjustment { get; set; }
        public byte? OrderRequired_AuthRequest { get; set; }
        public byte? OrderRequired_Transfer { get; set; }
        public byte? OrderRequired_SNEval { get; set; }
        public bool? DiscardDoubleBooking { get; set; }
        public bool? requireScheduleMerge { get; set; }
        public byte? ROUNDOFFEditedHours_Direction { get; set; }
        public int? ROUNDOFFEditedHours_Minutes { get; set; }
        public bool? RequireScheduleAutoMerge { get; set; }
        public byte? TelephonyCheckinRoundOffDirection { get; set; }
        public int? TelephonyCheckinRoundOffMinutes { get; set; }
        public byte? TelephonyCheckoutRoundOffDirection { get; set; }
        public int? TelephonyCheckoutRoundOffMinutes { get; set; }
        public bool? LongTermSchedulingRule_FrequencyBased { get; set; }
        public bool? LongTermSchedulingRule_RequireChangeOrder { get; set; }
        public bool? LongTermSchedulingRule_RequirePhysicianSign { get; set; }
        public string VisitFrequencyDisciplines { get; set; }
        public char? SchedulingRule { get; set; }
        public bool? EnableAutoAuth_Disciplines { get; set; }
        public bool? EnableAutoAuth_SN { get; set; }
        public int? EnableAutoAuth_SN_NumberOfVIistsOrHours { get; set; }
        public bool? EnableAutoAuth_Aide { get; set; }
        public int? EnableAutoAuth_Aide_NumberOfVIistsOrHours { get; set; }
        public bool? SplitAuthForOvernightWeekCrossOver { get; set; }
        public string PROVIDER_ID { get; set; }
        public bool? OverridePatientCBSA_Invoice { get; set; }
        public string CBSA { get; set; }
        public bool? ROUNDOFFEditedHours_ExcludePayableHours { get; set; }
        public bool? Enable837FileAutoTransmisisonToSHP { get; set; }
        public string NumberofDays_ToAppealDeniedClaim { get; set; }
        public bool? AutoSplitInvoicesForDisc { get; set; }
        public string AutoSplitInvoiceDisciplines { get; set; }
        public bool? PRINT_CFS_AS_HIPPS_DESC { get; set; }
        public bool? DoNotSplitInvoiceForMultipleAuthorization { get; set; }
        public bool? AutoSplitInvoiceforSOCorRecert { get; set; }
        public bool? F2F_RequiredFor_SOC_Episode_Only { get; set; }
        public bool? F2F_RequiredFor_SOC_And_Subsequent_Episodes { get; set; }
        public bool? Block_Billing_WithOut_F2F { get; set; }
        public string EVV_PayerID { get; set; }
        public bool? enableSecondaryPayerProperties { get; set; }
        public bool? SecondaryPayerPropertiesCopyRates { get; set; }
        public bool? PrintCopayinEDI { get; set; }
        public float? DailyLimitGraceTime { get; set; }
        public float? WeeklyLimitGraceTime { get; set; }
        public float? MonthlyLimitGraceTime { get; set; }
        public float? OverallAuthGraceTime { get; set; }
        public bool? DoNotConsiderForTelephony { get; set; }
        public int? PaymentAccountID { get; set; }
        public bool? RequiredMergedScheduleUnitsRecalculation { get; set; }
        public bool? useContratualRatesforContratualAmount { get; set; }
        public bool? UB04PrintPageWithSubTotals { get; set; }
        public bool? EnableOvernightSplitScheduleToHaveSameDate { get; set; }
        public bool? AutoSplitInvoicesforDisciplineGroup { get; set; }
        public bool? AutoSplitInvoicesforEachDiscipline { get; set; }
        public bool? RequireMedicarePreClaimAuthorization { get; set; }
        public int? alert_OnTimeBillingDays { get; set; }
        public int? alert_OnTimeReceivePaymentDays { get; set; }
        public bool? AutoPostContractualAdjforSec_TertiaryInvoice { get; set; }
        public bool? IsAuthNumberNotReqforAddingAuth { get; set; }
        public DateTime? CreatedOn { get; set; }
        public bool? SplitInvoiceByWeek { get; set; }
        public bool? OasisCodingExcludePayer { get; set; }
        public string _485Box26SOCStatement { get; set; }
        public bool? _485Box26OverrideRecertStatement { get; set; }
        public string _485Box26RecertStatement { get; set; }
        public bool? OverRide485Box26Statement { get; set; }
        public string EVVRegionCode { get; set; }
        public bool? OasisAllowExportAfterNonExport { get; set; }
        public int? TimelyFilingDays { get; set; }
        public bool? RequireQCode { get; set; }
        public bool? Print_ClaimKey_AuthNO_In_HIPPS_invoices { get; set; }
        public bool? autoApproveForBillingWhenNoDeficiency { get; set; }
        public bool? RAPDeficiencyPOCSendForSignMandatory { get; set; }
        public bool? mandateOasisStateIDNumber { get; set; }
        public byte? NumberOfDecimalPointsForUnits { get; set; }
        public byte? NumberOfDecimalPointsForHours { get; set; }
        public bool? autoMarkAsBilledOnEDICreation { get; set; }
        public bool? autoMarkAsBilledOnEDITransmitting { get; set; }
        public string CustomInvoicePrint_Terms { get; set; }
        public byte? OrdersRequired_Homebound { get; set; }
        public string EVVProgramCode { get; set; }
        public bool? BlockInvoiceTillAllDaySchedulesReadyForAllPayers { get; set; }
        public bool? AutoPostContractualAdjsutments_835 { get; set; } 
        public string RateCodeByDiscipline_39a { get; set; }
        public bool? allowToCreateRAPWithOpenPOC { get; set; }
        public bool? Round_ZeroUnitScheduleToOne { get; set; }
        public string AgencyContactForAuthRequestFirstName { get; set; }
        public string AgencyContactForAuthRequestLastName { get; set; }
        public string AgencyContactForAuthRequestPhoneNumber { get; set; }
        public string AgencyContactForAuthRequestFaxNumber { get; set; }
        public bool? DonotAllowToCreateInvoiceWithoutHCPCS { get; set; }
        public string RAPDeficiencyAssessmentStatus { get; set; }
        public bool? ISAssesmentTransmittedForRAPBilling { get; set; }
        public bool? Print_ClaimKey_AuthNO_In_HIPPS_invoices_Order { get; set; }
        public bool? enableTimedProcedureUnitBilling { get; set; }
        public DateTime? TimedProcedureUnitBillingEffectiveFrom { get; set; }
        public string UB0418_28ConditionCodes { get; set; }
        public string UB0418_TransferAssessmentValue { get; set; }
        public bool? blockInvoiceTillAllMandatoryChecklistCompleted { get; set; }
        public bool? blockRAPTillAllMandatoryChecklistCompleted { get; set; }
        public bool? blockEOETillAllMandatoryChecklistCompleted { get; set; }
        public int? OverrideRECERTGraceDays { get; set; }
        public string ProviderKeyNumber { get; set; }
        public bool? enableOverheadRate { get; set; }
        public bool? PrintClientInvoiceShowUnits { get; set; }
        public int? EpisodeDurationforLongtermCare { get; set; }
        public bool? IsEnableEVV { get; set; }
        public bool? enableDollarAmountTrackingOnAuthorization { get; set; }
        public bool? authRequestNotRequired { get; set; }
        public bool? isCDSPayer { get; set; }
        public string CDSBillingType { get; set; }
        public string CDSProgram { get; set; }
        public bool? isFMSAFeeIncludedInTheBudget { get; set; }
        public double? FMSAFeeDefault { get; set; }
        public byte? FMSABillDayOfMonth { get; set; }
        public string FMSAHCPCS { get; set; }
        public string FMSAModifer1 { get; set; }
        public string FMSAModifer2 { get; set; }
        public string FMSAModifer3 { get; set; }
        public string FMSAModifer4 { get; set; }
        public string FMSARevenueCode { get; set; }
        public bool? SplitInvoicebasedonRenseringProviderNPI { get; set; }
        public string FMSAbillMode { get; set; }
        public bool? IsAllowTelephonyAdHocVisits { get; set; }
        public byte? KmobileCheckinRoundOffDirection { get; set; }
        public int? KmobileCheckinRoundOffMinutes { get; set; }
        public byte? KmobileCheckoutRoundOffDirection { get; set; }
        public int? KmobileCheckoutRoundOffMinutes { get; set; }
        public bool EnableAuthorizationRestrictionToDayofWeek { get; set; }
        public bool RAPDeficiencyInitialOrdersReceivedMandatory { get; set; }

        public int? Paymentsourceid { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? Updatedon { get; set; }
        public int? Updatedby { get; set; }
        public bool? EnableRequisitionFeeBilling { get; set; }
        public bool? ub04_PrintDiagnosisWithDecimal { get; set; }
        public bool? cms_PrintDiagnosisWithDecimal { get; set; }
        public bool? _Notused_cms17_ReferringProvider { get; set; }
        public bool? cms17b_PhysicianNPI { get; set; }
        public string CMS17a1_OtherId_Qual_Type { get; set; }
        public string CMS17a1_OtherId_Qual_Other { get; set; }
        public string CMS17a2_OtherId_Type { get; set; }
        public string CMS17a2_OtherId_Other { get; set; }
        public bool? CMS17a_PrintInEDI { get; set; }
        public bool? cms11_FillInsuredPolicyGrp { get; set; }
        public bool? cms11a_FillInsuredDOB { get; set; }
        public bool? cms11c_FillInsuredPgmName { get; set; }
        public bool? EnableAdditionalLineitemsForInvoice { get; set; }
        public bool? Inv_MultiTherapyDiscOnSameDay_IncludeModifier { get; set; }
        public string Inv_MultiTherapyDiscOnSameDay_Modifier { get; set; }
        public string ICD_1 { get; set; }
        public string ICD_2 { get; set; }
        public string ICD_3 { get; set; }
        public bool? Invoice_UsePayerICDCodes { get; set; }
        public bool? cms17_PrintInEDI { get; set; }
        public bool? CMSBox28_PrintLineitemTotal { get; set; }
        public string CMSBox28_otherVal { get; set; }
        public bool? CMS1500_DoNoTPrint_SlashesInDate { get; set; }
        public bool? IsEVVDirty { get; set; }
        public string EVVExternalReferenceID { get; set; }
        public string CDSBillingMethod { get; set; }
        public int? Unit { get; set; }
        public double? Salary { get; set; }
        public string BillingCycle { get; set; }
        public string AuthRequestFaxRecipients { get; set; }
        public DateTime? lastInvoiceStartDate { get; set; }
        public string CDS_BillType { get; set; }
        public string UB04_63a_treatmentauthcode { get; set; }
        public string UB04_63b_treatmentauthcode { get; set; }
        public bool? CMS_22_Autoflow_ICN_ResubmissionCode { get; set; }
        public bool? CMS_ShowOnlyOneAuth { get; set; }
        public bool? CMS_PrintAdditionalAuthinBox23 { get; set; }
        public bool? CMS_PrintAdditionalAuthinBox19 { get; set; }
        public bool? EDI_PrintAuthNo_LineItemLevel { get; set; }
        public bool? EDI_AuthNoInLineItemLevel_if_Dif_fromClaimLevel { get; set; }
        public bool? Map835Remit_withonlyInvoice { get; set; }
        public bool? enableAuthLevelHCPCSSuffix { get; set; }
        public bool? splitScheduleForPartialAuthAllocation { get; set; }
        public bool? enableArizonaDDDExport { get; set; }
        public bool? enableArizonaDDDOnlineTransmission { get; set; }
        public int? enableArizonaDDDGatewayID { get; set; }
        public bool? autoMarkAsBilledOnDDDCreation { get; set; }
        public string EVVPayerType { get; set; }
        public bool? Autocarryprimarylineitempaymentsintosecondary { get; set; }
        public string defaultGroupCode_Secondary { get; set; }
        public string defaultReasonCode_secondary { get; set; }
        public int? SplitInvoice_LineItemCount { get; set; }
        public bool? HHAExchangeInvolved { get; set; }
        public string HHAExchangeInvolvedDiscplines { get; set; }
        public bool? PrintBudgetNoinEDI { get; set; }
        public bool? PrintBudgetnoforHcpcs { get; set; }
        public string BudgetNoforEDI { get; set; }
        public string HcpcslistforBudgetNo { get; set; }
        public bool? Map835_Invoicewithoutspecialchars { get; set; }
        public bool? BlockInvoiceforNotRecalculatedSchedules { get; set; }
        public bool? PrintPOS_LineItem { get; set; }
        public bool? PrintPOS_LineitemifntsameinClaim { get; set; }
        public string HHAExchangePayerCode { get; set; }
        public string CMS_17_attendingprovider { get; set; }
        public bool? AutocancelRAPwhilecreatingEOE { get; set; }
        public bool? Enable_eligibilityInquiries { get; set; }
        public bool? FollowPDGMRule { get; set; }
        public string PrimaryEvvVendorID { get; set; }
        public string SecondaryEvvVendorID { get; set; }
        public bool? PrintSecQualInEDI { get; set; }
        public string SecondaryQualifier { get; set; }
        public string SecondaryQualifierValue { get; set; }
        public string SecondaryQualifierValue_Other { get; set; }

        public int? NationalAccountDesignationID { get; set; }
        public bool? PrintLineItemProvid_ifdifferentfrmclaim { get; set; }
        public string Inv_RenderingProviderTaxonomyType { get; set; }
        public bool? Donot_printLinebreakin270 { get; set; }
        public bool? BlockBilling_untilMatchingEvvVisit_Downloaded { get; set; }
        public bool? enableHolidayBillRate { get; set; }
        public bool? OverrideHolidayRateFactor { get; set; }
        public float? RateFactor { get; set; }
        public bool? PrintPrimaryInvoiceIdentifier { get; set; }
        public string PrintPrimaryInvoiceIdentifierValue { get; set; }
        public bool? EDI_PrintVisitTimeInSV1Segment { get; set; }
        public bool? EDI_PrintIndividualProvidingService { get; set; }
        public bool? EDI_PrintServiceLocationAddress { get; set; }
        public int? EvvAggregatorVendorVersionMasterID { get; set; }
        public bool? overridePDGMEffectivePeriod { get; set; }
        public DateTime? PDGMEffectiveStartDate { get; set; }
        public float? pdgmRAPPercentage { get; set; }
        public bool? EnableRCD { get; set; }
        public bool? overrideRCDSubmissionMethods { get; set; }
        public bool? enableRCDSubmissionByUserManually { get; set; }
        public bool? enableRCDSubmissionByOnline { get; set; }
        public string SFTPServer { get; set; }
        public string SFTPPort { get; set; }
        public string SFTPUserID { get; set; }
        public string SFTPpassword { get; set; }
        public bool? EnableSFTPImportFolder { get; set; }
        public string SFTPImportFolder { get; set; }
        public bool? EnableSFTPExportFolder { get; set; }
        public string SFTPExportFolder { get; set; }
        public bool? enableRCDSubmissionByFax { get; set; }
        public string RCDSubmissionFaxNumber { get; set; }
        public bool? enableRCDSubmissionFaxCoversheet { get; set; }
        public int? RCDSubmissionFaxCoversheetID { get; set; }
        public bool? enableRCDSubmissionPostMail { get; set; }
        public string RCDSubmissionPostMailAddress { get; set; }
        public bool? RequiredF2FSignedDoc { get; set; }
        public char? F2FSignedDocErrorType { get; set; }
        public bool? ReqiredPlanofCareSignedDoc { get; set; }
        public bool? RequiredOASISPDF { get; set; }
        public bool? RequiredOASISXML { get; set; }
        public bool? RequiredSubmissionSheet { get; set; }
        public string SubmissionSheetRequesterName { get; set; }
        public int? SubmissionSheetAddressId { get; set; }
        public bool? RAPBillingisMandatoryToSubmitRCD { get; set; }
        public bool? isOverrideRCDMethod { get; set; }
        public bool? isOverrideRCDDocument { get; set; }
        public bool? EDI_printNonCoveredChargesForLineItems { get; set; }
        public bool? IsPrimaryEVV { get; set; }
        public DateTime? NoPayRapEffectiveFrom { get; set; }
        public bool? BatchEligibility_PrintSingleSourceAndReceiverLoops { get; set; }
        public string ContractRegion { get; set; }
        public bool? enabletravelTimeforBilling { get; set; }
        public string Traveltime_HCPCS { get; set; }
        public string Traveltime_RevenueCode { get; set; }
        public string Traveltime_Modifier1 { get; set; }
        public string Traveltime_Modifier2 { get; set; }
        public string Traveltime_Modifier3 { get; set; }
        public string Traveltime_Modifier4 { get; set; }
        public byte? Traveltime_Billmode { get; set; }
        public double? Traveltime_BillRate { get; set; }
        public bool? Traveltime_isunitsFixed { get; set; }
        public float? Traveltime_FixedUnits { get; set; }
        public int? Traveltime_MinutesPerUnit { get; set; }
        public float? Traveltime_NumberOfUnits { get; set; }
        public string Overide_printLinebreaksin270 { get; set; }
        public bool DonotmandateUTNforLUPAPeriodofcare { get; set; }
        public DateTime? ExportEffectiveDate { get; set; }
        public DateTime? EffectiveDate { get; set; }
        public bool? CDS_MergeAllServicestoSingleService { get; set; }
        public bool enableRAP2SubmissionTogether { get; set; }
        public bool defaultEnablePatientRequire60DayCare { get; set; }
        public bool OverdueRAPRequireReasonCodes { get; set; }
        public string RAP_AssessmentRule { get; set; }
        public bool RAP_AssessmentRule_AllowOverriding { get; set; }
        public string RAP_POCRule { get; set; }
        public bool RAP_POCRule_AllowOverriding { get; set; }
        public bool EnableOrginalF2F { get; set; }
        public bool EnableOrginalPOC { get; set; }
        public bool PostRAPNontimelyFilingDeductionAdjsutments_835 { get; set; }
        public bool? blockInvoiceCreationUntilScheduleVerifiedWithEvvAggregato { get; set; }
        public bool? requireAttestationForScheduleApprovalForNonEvv { get; set; }
        public bool? requireAttestationForScheduleApprovalForEvv { get; set; }
        public bool requireEvvPlannedTimeToMatchActualTime { get; set; }
        public bool requireEvvPlannedHoursToMatchActualHours { get; set; }
        public bool requireEvvReasonCodesResolutionForApproval { get; set; }
        public bool EvvExport_DiscardPayer { get; set; }
        public DateTime? EvvExport_ExportEffectiveFrom { get; set; }
        public bool? PrintIntakeDiagnosis_EDI { get; set; }


    }
}
